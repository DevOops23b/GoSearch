name: OWASP ZAP scan

on:
  push:
  
  pull_request:
  
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  owasp-zap:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
        ports:
          - 9201:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
        options: >-
          --health-cmd="curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      
      postgres:
        image: postgres@sha256:f89a36ed5069cee5125bb9ddec623f26989792560eae9a06f767c87ba117cb6d
        env:
          POSTGRES_USER: ${{ secrets.DB_USER_LOCAL }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD_LOCAL }}
          POSTGRES_DB: ${{ secrets.DB_NAME_LOCAL }}
          POSTGRES_HOST: ${{ secrets.DB_HOST_LOCAL }}
          POSTGRES_PORT: ${{ secrets.DB_PORT_LOCAL }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Create empty database file for testing
        run: |
            mkdir -p ./src
            touch ./src/whoknows.db
            chmod 666 ./src/whoknows.db

      - name: Set environment variables 
        run: |
          echo "CONN_STR=host=postgres port=5432 user=${{ secrets.DB_USER_LOCAL }} password=${{ secrets.DB_PASSWORD_LOCAL }} dbname=${{ secrets.DB_NAME_LOCAL }} sslmode=disable" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER_LOCAL }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_LOCAL }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME_LOCAL }}" >> $GITHUB_ENV
          echo "APP_ENV=development" >> $GITHUB_ENV
          echo "LOG_LEVEL=debug" >> $GITHUB_ENV
          echo "ES_HOST=elasticsearch" >> $GITHUB_ENV
          echo "ES_PASSWORD=changeme" >> $GITHUB_ENV
          echo "TEMPLATE_PATH=/app/src/templates" >> $GITHUB_ENV
          echo "STATIC_PATH=/app/src/static" >> $GITHUB_ENV
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET || 'default_secret' }}" >> $GITHUB_ENV

      - name: Set up docker-compose
        run: docker compose -f docker-compose.dev.yml up -d --build
      
      - name: Wait for the application to start
        run: |
          for i in {1..40}; do
            if docker exec go-app curl -s http://localhost:8080/ >/dev/null; then
              echo "App is running!"
              break
            fi

            if [ $i -eq 30 ]; then
              echo "Application failed to start"
              docker logs go-app
              exit 1
            fi

            echo "Waiting for app to start... (Attempt $i/30)"
            sleep 10
          done

      - name: Create report directory with proper permissions
        run: mkdir -p "$(pwd)/zap-report" && chmod 777 "$(pwd)/zap-report"
      
      - name: OWASP ZAP Scan
        run: |
          docker run --rm \
            --network "$(docker network ls --filter name=_default --format {{.Name}})" \
            -v "$(pwd)/zap-report:/zap/wrk:rw" \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-full-scan.py -t http://go-app:8080 -a -J zap-report.json -r zap-report.html -d -w zap-report.md
      
      - name: Upload report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: owasp-zap-report
          path: zap-report/