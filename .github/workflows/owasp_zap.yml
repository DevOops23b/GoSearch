name: OWASP ZAP scan

on:
  push:
  
  pull_request:
  
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  owasp-zap:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
        options: >-
          --health-cmd="curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: 1.21

      - name: Install dependencies
        working-directory: ./src/backend
        run: |
          go mod tidy
          go mod download
      
      - name: Set environment variables for Elasticsearch
        run: |
          echo "ES_HOST=localhost" >> $GITHUB_ENV
          echo "ES_USERNAME=elastic" >> $GITHUB_ENV
          echo "ES_PASSWORD=changeme" >> $GITHUB_ENV

      - name: Run the application
        run: |
          go run ./src/backend/ . & sleep 20
      
      - name: Ensure the application is running
        run: |
          curl --retry 5 --retry-connrefused --retry-delay 5 http://localhost:8080
      
      - name: owasp zap scan
        uses: zaproxy/action-full-scan@75ee1686750ab1511a73b26b77a2aedd295053ed
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:8080'
          cmd_options: '-a'
          allow_issue_writing: true
      
      - name: Upload report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: owasp-zap-report
          path: zap.out
