services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/devoops23b/gosearch:latest
    container_name: go-app
    volumes:
      - ./src/whoknows.db:/app/src/whoknows.db
    ports:
      - "8081:8080"
    environment:
      - CONN_STR=${CONN_STR}
      - APP_ENV=${APP_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - ES_HOST=${ES_HOST}
      - TEMPLATE_PATH=${TEMPLATE_PATH}
      - STATIC_PATH=${STATIC_PATH}
      - SESSION_SECRET=${SESSION_SECRET}
      - SEARCH_LOG_PATH=/app/src/backend/search.log
    depends_on:
      - postgres
      - elasticsearch
    restart: always
    command: /app/entrypoint.sh
    mem_limit: 256m

  postgres:
    image: postgres@sha256:f89a36ed5069cee5125bb9ddec623f26989792560eae9a06f767c87ba117cb6d
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_SHARED_BUFFERS: 64MB
      POSTGRES_WORK_MEM: 4MB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    mem_limit: 200m  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ES_PASSWORD}
      ES_JAVA_OPTS: "-Xms128m -Xmx128m"
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
      indices.memory.index_buffer_size: "5%"
      indices.queries.cache.size: "3%"
      indices.fielddata.cache.size: "3%"
      indices.recovery.max_bytes_per_sec: "20mb"
      thread_pool.write.queue_size: 100
      thread_pool.search.queue_size: 100
      cluster.routing.allocation.disk.threshold_enabled: "false"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    mem_limit: 256m  
    restart: always
      

volumes:
  postgres_data:
  esdata: